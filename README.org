* cl-slug
  Easily create slugs from any string. Supports english, portuguese, esperanto and german strings.

  Inspired by [[http://lispwebtales.ppenev.com/chap05.html#leanpub-auto-putting-it-together-updated-blog-example][Lisp Web Tales]].
** Usage
#+BEGIN_SRC lisp
* (progn
    (ql:quickload :cl-slug)
    (defpackage cl-slug-user
      (:use cl cl-slug))
    (in-package cl-slug-user))
; => T
#+END_SRC
   The main function is called =slugify=:
#+BEGIN_SRC lisp
* (slugify "My new cool article, for the blog (V. 2).")
; => "my-new-cool-article-for-the-blog-v-2"
* (slugify "André Miranda")
; => "andre-miranda"
#+END_SRC
   =slugify= removes any accentuated character, replacing it with an unaccentuated equivalent, and any ponctuation (a ponctuation is a char that returns =NIL= for =alphanumericp=) and puts a dash (=-=) on it's place. You can change that by binding (of =setf=ing) =*slug-separator*=:
#+BEGIN_SRC lisp
* (let ((*slug-separator* #\_))
    (slugify "Testing the *slug-separator* var..."))
; => "testing_the_slug_separator_var"
#+END_SRC
   If there's an accentuated character that cl-slug doesn't cover, you can simply add to =*accentuation-alist*=:
#+BEGIN_SRC lisp
* (slugify "ć")
; => "ć"
* (pushnew '(#\c . #\ć) *accentuation-alist*)
; prints the whole alist...
* (slugify "ć")
; => "c"
#+END_SRC
   Note: if you find yourself doin't that too often, consider creating a pull request to add it to the source.

   =slugify= is built on two other functions, =remove-ponctuation= and =remove-accentuation=:
#+BEGIN_SRC lisp
* (remove-ponctuation "String with a comma, a dot (.) and parentheses")
; => "String-with-a-comma-a-dot-and-parentheses"
* (remove-accentuation "André Miranda")
; => "Andre Miranda"
#+END_SRC
   All those functions also ignore numbers:
#+BEGIN_SRC lisp
* (slugify "one2three4five")
; => "one2three4five"
#+END_SRC

** Dependencies
   The test package uses the [[http://github.com/fukamachi/prove][prove]] test library.

** Installation
   1. =cd= to your [[quicklisp.org][Quicklisp]] =local-projects= folder.
   2. Clone the repo =git clone https://github.com/EuAndreh/cl-slug=.
   3. Load it with Quicklisp: =(ql:quickload :cl-slug)=

** Bugs
   If you find any bug or inconsistency in the code, or if you find it too hard to use, please, feel free to open an issue.

** Tests
   To run all the defined tests, use:
#+BEGIN_SRC lisp
* (asdf:test-system :cl-slug)
; prints lots of stuff...
; => T
#+END_SRC

** Author

+ André Miranda

** Copyright

Copyright (c) 2014 André Miranda

** License

Licensed under the LLGPL License.
